"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _cors=_interopRequireDefault(require("cors")),_config=_interopRequireDefault(require("./configs/config.js")),_cookieParser=_interopRequireDefault(require("cookie-parser")),_index=_interopRequireDefault(require("./routes/index.js")),_schema=_interopRequireDefault(require("./graphql/schema.js")),_resolvers=_interopRequireDefault(require("./graphql/resolvers.js")),_server=require("@apollo/server"),_standalone=require("@apollo/server/standalone");function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}class App{_routes=[];constructor(a){this._express=a,this._app=a(),this._app.use(a.json()),this._app.use((0,_cors.default)({origin:process.env.ORIGIN,credentials:!0})),this._app.use((0,_cookieParser.default)()),this._app.set("trust proxy",1),this._routes=_index.default,this._routes.forEach(a=>{this._app.use(a)}),(0,_config.default)()}async listen(a){if(!Number.isInteger(a))throw new TypeError("Port must be a number");const b=new _server.ApolloServer({typeDefs:_schema.default,resolvers:_resolvers.default,introspection:!0}),{url:c}=await(0,_standalone.startStandaloneServer)(b,{listen:{port:4e3}});console.log(`ðŸš€  Graphql server ready at: ${c}`),this._app.listen(process.env.PORT||a,b=>b?console.log(b):void console.log(`Server started on port ${a}`))}}exports.default=App;
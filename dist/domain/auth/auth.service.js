"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.default=void 0;var _uuid=require("uuid"),_bcrypt=_interopRequireDefault(require("bcrypt")),_User=_interopRequireDefault(require("../user/entity/User.js")),_tokenService=_interopRequireDefault(require("../token/token.service.js")),_validateRefreshToken=_interopRequireDefault(require("../token/handlers/validateRefreshToken.js")),_mailService=_interopRequireDefault(require("../mail/mail.service.js"));function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}class AuthService{_tokenService=new _tokenService.default;_mailService=new _mailService.default;_defaultAvatar="/uploads/noavatar.png";constructor(){}async register(a,b){try{const c=a.body.password,d=await _bcrypt.default.genSalt(10),e=await _bcrypt.default.hash(c,d),f=(0,_uuid.v4)(),g=new _User.default({rank:"user",email:a.body.email,fullName:a.body.fullName,avatarUrl:this._defaultAvatar,passwordHash:e,activationLink:f});await this._mailService.sendActivationEmail(a.body.email,`${process.env.API_URL}/activate/${f}`);const h=await _User.default.findOne({email:a.body.email});if(h)return b.status(400).json({message:"\u0414\u0430\u043D\u043D\u0430\u044F \u043F\u043E\u0447\u0442\u0430 \u0443\u0436\u0435 \u0438\u0441\u043F\u043E\u043B\u044C\u0437\u0443\u0435\u0442\u0441\u044F"});const i=await g.save(),j=this._tokenService.generateTokens({id:i._id});await this._tokenService.save(i._id,j.refreshToken),b.cookie("refreshToken",j.refreshToken,{maxAge:2592000000,httpOnly:!0,secure:!0,sameSite:"none"});const{passwordHash:k,...l}=i._doc;return b.status(200).json({userData:l,accessToken:j.accessToken})}catch(a){return console.log(a),b.status(500).json({message:"\u0427\u0442\u043E-\u0442\u043E \u043F\u043E\u0448\u043B\u043E \u043D\u0435 \u0442\u0430\u043A"})}}async activate(){}async login(a,b){try{const c=await _User.default.findOne({email:a.body.email});if(!c)return b.status(400).json({message:"\u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0439 \u043B\u043E\u0433\u0438\u043D \u0438\u043B\u0438 \u043F\u0430\u0440\u043E\u043B\u044C!"});const d=await _bcrypt.default.compare(a.body.password,c._doc.passwordHash);if(!d)return b.status(400).json({message:"\u041D\u0435\u0432\u0435\u0440\u043D\u044B\u0439 \u043B\u043E\u0433\u0438\u043D \u0438\u043B\u0438 \u043F\u0430\u0440\u043E\u043B\u044C!"});const e=this._tokenService.generateTokens({id:c._id});await this._tokenService.save(c._id,e.refreshToken),b.cookie("refreshToken",e.refreshToken,{maxAge:2592000000,httpOnly:!0,secure:!0,sameSite:"none"});const{passwordHash:f,...g}=c._doc;return b.status(200).json({userData:g,accessToken:e.accessToken})}catch(a){return b.status(500).json({message:"\u0427\u0442\u043E-\u0442\u043E \u043F\u043E\u0448\u043B\u043E \u043D\u0435 \u0442\u0430\u043A"})}}async logout(a,b){try{const{refreshToken:c}=a.cookies;return await this._tokenService.removeToken(c),b.clearCookie("refreshToken"),b.status(200).json({message:"\u041F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C \u0443\u0441\u043F\u0435\u0448\u043D\u043E \u0432\u044B\u0448\u0435\u043B \u0438\u0437 \u0430\u043A\u043A\u0430\u0443\u043D\u0442\u0430"})}catch(a){return b.status(500).json({message:"\u0427\u0442\u043E-\u0442\u043E \u043F\u043E\u0448\u043B\u043E \u043D\u0435 \u0442\u0430\u043A"})}}async refresh(a,b){try{const{refreshToken:c}=a.cookies;if(!c)throw new Error("Refresh token was not found");const d=(0,_validateRefreshToken.default)(c),e=this._tokenService.findToken(c);if(!d||!e)return b.status(403).json({message:"\u041D\u0435\u0442 \u0434\u043E\u0441\u0442\u0443\u043F\u0430"});const f=await _User.default.findById(d.id);if(!f)return b.status(404).json({message:"\u041F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D"});const g=this._tokenService.generateTokens({id:f._id});return await this._tokenService.save(f._id,g.refreshToken),b.cookie("refreshToken",g.refreshToken,{maxAge:2592000000,httpOnly:!0,secure:!0,sameSite:"none"}),b.status(200).json({accessToken:g.accessToken})}catch(a){return b.status(500).json({message:"\u0427\u0442\u043E-\u0442\u043E \u043F\u043E\u0448\u043B\u043E \u043D\u0435 \u0442\u0430\u043A"})}}async getMe(a,b){try{const c=await _User.default.findById(a.userId);if(!c)return b.status(404).json({message:"\u041F\u043E\u043B\u044C\u0437\u043E\u0432\u0430\u0442\u0435\u043B\u044C \u043D\u0435 \u043D\u0430\u0439\u0434\u0435\u043D!"});const{passwordHash:d,...e}=c._doc;return b.status(200).json({userData:e})}catch(a){return b.status(500).json({message:"\u0427\u0442\u043E-\u0442\u043E \u043F\u043E\u0448\u043B\u043E \u043D\u0435 \u0442\u0430\u043A"})}}}exports.default=AuthService;
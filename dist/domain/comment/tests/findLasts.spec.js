"use strict";var _commentService=_interopRequireDefault(require("../comment.service.js")),_Comment=_interopRequireDefault(require("../entity/Comment.js"));function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}const commentService=new _commentService.default;describe("Comment module",()=>{let a,b,c;beforeEach(()=>{a={body:{}},b={status:jest.fn().mockReturnThis(),json:jest.fn()},c=[{_id:"mockId1",fullName:"Test",text:"Some message...",user:"mockUserData1",post:"mockPostData1",avatarUrl:"/uploads/MV5BNDY0NjMxNDQ2Ml5BMl5BanBnXkFtZTgwNDIyNTI1NDM@._V1_SX300_CR0.jpg",createdAt:"2023-01-13T09:13:22.355Z",updatedAt:"2023-03-16T10:17:10.968Z"},{_id:"mockId2",fullName:"Test",text:"Some message...",user:"mockUserData2",post:"mockPostData2",avatarUrl:"/uploads/MV5BNDY0NjMxNDQ2Ml5BMl5BanBnXkFtZTgwNDIyNTI1NDM@._V1_SX300_CR0.jpg",createdAt:"2023-01-13T09:13:22.355Z",updatedAt:"2023-03-16T10:17:10.968Z"}]}),afterEach(()=>{jest.clearAllMocks()}),it("Should return all comments",async()=>{const d=jest.fn().mockReturnThis(),e=jest.fn().mockResolvedValue(c);jest.spyOn(_Comment.default,"find").mockReturnValue({populate:d,exec:e}),await commentService.findLasts(a,b),expect(d).toHaveBeenCalledWith("user"),expect(d).toHaveBeenCalledWith("post"),expect(e).toHaveBeenCalledWith(),expect(b.status).toHaveBeenCalledWith(200),expect(b.json).toHaveBeenCalledWith({comments:c.slice(0,5).reverse()})}),it("Should return 500 server error",async()=>{jest.spyOn(_Comment.default,"find").mockReturnValue(new Error("Mock error")),await commentService.findLasts(a,b),expect(b.status).toHaveBeenCalledWith(500),expect(b.json).toHaveBeenCalledWith({message:"\u0427\u0442\u043E-\u0442\u043E \u043F\u043E\u0448\u043B\u043E \u043D\u0435 \u0442\u0430\u043A"})})});